"use strict";(self.webpackChunkdoc_besu=self.webpackChunkdoc_besu||[]).push([[2735],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var i=n(96540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}},44614:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"private-networks/how-to/configure/curves","title":"Alternative elliptic curves","description":"Using alternative elliptic curves in Besu","source":"@site/docs/private-networks/how-to/configure/curves.md","sourceDirName":"private-networks/how-to/configure","slug":"/private-networks/how-to/configure/curves","permalink":"/private-networks/how-to/configure/curves","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperledger/besu-docs/tree/main/docs/private-networks/how-to/configure/curves.md","tags":[{"inline":true,"label":"private networks","permalink":"/tags/private-networks"}],"version":"current","lastUpdatedAt":1744783165000,"sidebarPosition":8,"frontMatter":{"title":"Alternative elliptic curves","description":"Using alternative elliptic curves in Besu","sidebar_position":8,"tags":["private networks"]},"sidebar":"privateDocSidebar","previous":{"title":"TLS","permalink":"/private-networks/how-to/configure/tls"},"next":{"title":"Create and send transactions","permalink":"/private-networks/how-to/send-transactions/"}}');var r=n(74848),s=n(28453);const o={title:"Alternative elliptic curves",description:"Using alternative elliptic curves in Besu",sidebar_position:8,tags:["private networks"]},c="Configure alternative elliptic curves",a={},l=[];function u(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"configure-alternative-elliptic-curves",children:"Configure alternative elliptic curves"})}),"\n",(0,r.jsx)(t.admonition,{type:"caution",children:(0,r.jsx)(t.p,{children:"Configuring alternative elliptic curves is an early access feature."})}),"\n",(0,r.jsxs)(t.p,{children:["By default, Besu uses the Ethereum standard ",(0,r.jsx)(t.code,{children:"secp256k1"})," elliptic curve (EC). However, when running nodes in a private network, it is possible to configure an alternative elliptic curve."]}),"\n",(0,r.jsxs)(t.p,{children:["The configuration for what elliptic curve Besu will use is done in the network configuration section of genesis file, using the ",(0,r.jsx)(t.a,{href:"/public-networks/reference/genesis-items#configuration-items",children:(0,r.jsx)(t.code,{children:"ecCurve"})})," key:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'{\n  "genesis": {\n    "config": {\n      "ecCurve": "secp256k1",\n    [...]\n  },\n  [...]\n}\n'})}),"\n",(0,r.jsx)(t.admonition,{title:"Important",type:"danger",children:(0,r.jsxs)(t.p,{children:["All nodes in the network ",(0,r.jsx)(t.strong,{children:"MUST"})," use the same elliptic curve. Nodes with different EC configuration from the network won't be able to send messages to other nodes or verify transactions and blocks."]})}),"\n",(0,r.jsx)(t.p,{children:"Besu supports the following elliptic curves:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"secp256k1"})," (Ethereum default)"]}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"secp256r1"})}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);